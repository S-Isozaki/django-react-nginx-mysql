apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\Users\user\AppData\Local\Microsoft\WinGet\Links\kompose.exe --file .\docker-compose.yaml convert
    kompose.version: 1.30.0 (9d8dcb518)
  labels:
    io.kompose.service: database
  name: database
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: database
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: C:\Users\user\AppData\Local\Microsoft\WinGet\Links\kompose.exe --file .\docker-compose.yaml convert
        kompose.version: 1.30.0 (9d8dcb518)
      labels:
        io.kompose.network/django-react-nginx-mysql-backend-database-network: "true"
        io.kompose.service: database
    spec:
      containers:
        - args:
            - mysqld
            - --character-set-server=utf8
            - --collation-server=utf8_unicode_ci
          env:
            - name: MSQL_PASSWORD
              value: user
            - name: MYSQL_DATABASE
              value: backenddb
            - name: MYSQL_ROOT_PASSWORD
              value: root
            - name: MYSQL_USER
              value: user
            - name: TZ
              value: Asia/Tokyo
          image: mysql
          name: database-container
          ports:
            - containerPort: 3306
              hostPort: 3306
              protocol: TCP
          resources: {}
          volumeMounts:
            - mountPath: /var/lib/mysql
              name: database-volume
      restartPolicy: Always
      volumes:
        - name: database-volume
          persistentVolumeClaim:
            claimName: database-volume
status: {}
